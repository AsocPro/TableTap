// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
import { Terrain as __Terrain } from "./terrain_type";
import { Unit as __Unit } from "./unit_type";
import { Obstacle as __Obstacle } from "./obstacle_type";
import { Underlay as __Underlay } from "./underlay_type";
import { Overlay as __Overlay } from "./overlay_type";

import type {
  CallReducerFlags,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  ReducerEventContextInterface,
  SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
export type Action = {
  timestamp: Timestamp,
  actionType: string,
  description: string,
  terrains: __Terrain[] | undefined,
  units: __Unit[] | undefined,
  obstacles: __Obstacle[] | undefined,
  underlays: __Underlay[] | undefined,
  overlays: __Overlay[] | undefined,
  createdAt: Timestamp | undefined,
  updatedAt: Timestamp | undefined,
};

/**
 * A namespace for generated helper functions.
 */
export namespace Action {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("timestamp", AlgebraicType.createTimestampType()),
      new ProductTypeElement("actionType", AlgebraicType.createStringType()),
      new ProductTypeElement("description", AlgebraicType.createStringType()),
      new ProductTypeElement("terrains", AlgebraicType.createOptionType(AlgebraicType.createArrayType(__Terrain.getTypeScriptAlgebraicType()))),
      new ProductTypeElement("units", AlgebraicType.createOptionType(AlgebraicType.createArrayType(__Unit.getTypeScriptAlgebraicType()))),
      new ProductTypeElement("obstacles", AlgebraicType.createOptionType(AlgebraicType.createArrayType(__Obstacle.getTypeScriptAlgebraicType()))),
      new ProductTypeElement("underlays", AlgebraicType.createOptionType(AlgebraicType.createArrayType(__Underlay.getTypeScriptAlgebraicType()))),
      new ProductTypeElement("overlays", AlgebraicType.createOptionType(AlgebraicType.createArrayType(__Overlay.getTypeScriptAlgebraicType()))),
      new ProductTypeElement("createdAt", AlgebraicType.createOptionType(AlgebraicType.createTimestampType())),
      new ProductTypeElement("updatedAt", AlgebraicType.createOptionType(AlgebraicType.createTimestampType())),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: Action): void {
    Action.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): Action {
    return Action.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


